name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Utilise la version de Node.js que tu préfères
          cache: 'npm'
          
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        run: |
          npm ci  # Utilise npm ci pour une installation propre des dépendances
          npm install eslint --save-dev  # S'assure qu'ESLint est bien installé

  validate:
    runs-on: ubuntu-latest
    needs: install  # Ce job ne s'exécute qu'après le job "install"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Validate code (Linting)
        run: npm run lint  # Lance ESLint après avoir installé les dépendances

  test:
    runs-on: ubuntu-latest
    needs: validate  # Ce job ne s'exécute qu'après le job "validate"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run tests
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: test  # Ce job ne s'exécute qu'après le job "test"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build project
        run: npm run build

  release:
    runs-on: ubuntu-latest
    needs: build  # Ce job ne s'exécute qu'après le job "build"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create release
        run: echo "Creating release... (simulate with echo)"

  deploy:
    runs-on: ubuntu-latest
    needs: release  # Ce job ne s'exécute qu'après le job "release"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy project
        run: echo "Deploying project... (simulate with echo)"
