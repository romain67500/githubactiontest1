name: CI Pipeline

on:
  push:
    branches:
      - main  # Déclenche l'action sur des pushs vers la branche principale
  pull_request:
    branches:
      - main  # Déclenche l'action lors de la création d'une pull request vers la branche principale

jobs:
  install:
    runs-on: ubuntu-latest  # Utilisation d'une machine virtuelle Ubuntu
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Récupère le code du repository

      - name: Set up Node.js
        uses: actions/setup-node@v3  # Configure Node.js
        with:
          node-version: '16'  # Choix de la version de Node.js

      - name: Install dependencies
        run: npm ci --cache .npm --prefer-offline  # Utilise npm ci pour installer les dépendances avec un cache

  lint:
    runs-on: ubuntu-latest  # Utilisation d'une machine virtuelle Ubuntu pour l'étape de lint
    needs: install  # L'étape "lint" attend la fin de l'étape "install"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Récupère de nouveau le code du repository pour l'étape suivante

      - name: Lint code (ESLint)
        run: npm run lint  # Exécute la commande "npm run lint" définie dans package.json

  unit-test:
    runs-on: ubuntu-latest  # Utilisation d'une machine virtuelle Ubuntu pour l'étape de tests
    needs: install  # L'étape "unit-test" attend la fin de l'étape "install"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Récupère de nouveau le code du repository pour l'étape suivante

      - name: Run unit tests with Vitest
        run: npm test  # Exécute la commande "npm test" pour lancer les tests avec Vitest

  release:
    runs-on: ubuntu-latest  # Utilisation d'une machine virtuelle Ubuntu pour l'étape de release
    needs: [lint, unit-test]  # Cette étape attend la fin des étapes "lint" et "unit-test"
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore: release')  # Vérifie la branche et le message du dernier commit
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Récupère le code pour préparer la release

      - name: Set up Node.js
        uses: actions/setup-node@v3  # Configure Node.js
        with:
          node-version: '16'  # Choix de la version de Node.js

      - name: Configure Git user
        run: |
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git config user.name "${{ github.actor }}"

      - name: Run release-it
        run: npx release-it --ci  # Exécute release-it en mode CI
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_RELEASE }}  # Utilise le token GitHub pour effectuer la release
